Index: app/src/main/java/com/duodevloopers/foodup/Activities/SelectServiceActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.duodevloopers.foodup.Activities;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.duodevloopers.foodup.R;\r\nimport com.duodevloopers.foodup.repository.Repository;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.Transaction;\r\nimport com.google.zxing.integration.android.IntentIntegrator;\r\nimport com.google.zxing.integration.android.IntentResult;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\npublic class SelectServiceActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = \"SelectServiceActivity\";\r\n\r\n    private Repository repository;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_select_service);\r\n\r\n//        startActivity(new Intent(this, OrderStatusActivity.class));\r\n\r\n        repository = new Repository();\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable @org.jetbrains.annotations.Nullable Intent data) {\r\n        IntentResult intentResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);\r\n        if (intentResult != null) {\r\n            if (intentResult.getContents() != null) {\r\n\r\n                showSnackBar();\r\n\r\n                String[] contents = intentResult.getContents().split(\"/\");\r\n//\r\n//                if (contents.length == 3) {\r\n//                    // recharge\r\n//                    recharge(contents[0]);\r\n//                } else if (contents.length == 2) {\r\n//                    // attendance\r\n//                    //repository.writeToSheet(MyApp.getLoggedInUser());\r\n//\r\n//\r\n//\r\n//                }\r\n\r\n                Log.d(TAG, \"onActivityResult: \" + contents.toString());\r\n\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n    }\r\n\r\n    private void showSnackBar() {\r\n        Snackbar.make(findViewById(android.R.id.content), \"QR Code successfully scanned\", Snackbar.LENGTH_LONG)\r\n                .setBackgroundTint(Color.GRAY)\r\n                .setActionTextColor(Color.WHITE)\r\n                .show();\r\n    }\r\n\r\n    private void recharge(String amount) {\r\n        FirebaseFirestore.getInstance()\r\n                .runTransaction(new Transaction.Function<Void>() {\r\n                    @Override\r\n                    public Void apply(@NotNull Transaction transaction) throws FirebaseFirestoreException {\r\n                        DocumentReference reference = FirebaseFirestore.getInstance().collection(\"users\").document(\"C171080\");\r\n                        DocumentSnapshot documentSnapshot = transaction.get(reference);\r\n\r\n                        double newAmount = Double.parseDouble(documentSnapshot.get(\"credit\").toString()) + Double.parseDouble(amount);\r\n                        transaction.update(reference, \"credit\", newAmount);\r\n\r\n                        // Success\r\n                        return null;\r\n                    }\r\n                }).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n                Log.d(TAG, \"Transaction success!\");\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/duodevloopers/foodup/Activities/SelectServiceActivity.java b/app/src/main/java/com/duodevloopers/foodup/Activities/SelectServiceActivity.java
--- a/app/src/main/java/com/duodevloopers/foodup/Activities/SelectServiceActivity.java	(revision a8fecfb32170009d21c21a8eb599d37ab6acf3bf)
+++ b/app/src/main/java/com/duodevloopers/foodup/Activities/SelectServiceActivity.java	(date 1640547799231)
@@ -22,6 +22,8 @@
 
 import org.jetbrains.annotations.NotNull;
 
+import java.util.Arrays;
+
 public class SelectServiceActivity extends AppCompatActivity {
 
     private static final String TAG = "SelectServiceActivity";
@@ -47,6 +49,8 @@
                 showSnackBar();
 
                 String[] contents = intentResult.getContents().split("/");
+
+                Log.d(TAG, "onActivityResult: "+contents[0]);
 //
 //                if (contents.length == 3) {
 //                    // recharge
@@ -59,7 +63,7 @@
 //
 //                }
 
-                Log.d(TAG, "onActivityResult: " + contents.toString());
+//                Log.d(TAG, "onActivityResult: " + Arrays.toString(contents));
 
             }
         } else {
Index: app/src/main/java/com/duodevloopers/foodup/myapp/MyApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.duodevloopers.foodup.myapp\r\n\r\nimport android.app.Application\r\nimport com.duodevloopers.foodup.Model.RestaurantItemPojo\r\nimport com.duodevloopers.foodup.Model.User\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport java.util.*\r\n\r\nclass MyApp : Application() {\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        if (FirebaseAuth.getInstance().currentUser != null) {\r\n            getUser()\r\n        }\r\n\r\n    }\r\n\r\n    companion object {\r\n        private const val TAG = \"MyApp\"\r\n        var mRestaurantItemPojo: MutableList<RestaurantItemPojo> = ArrayList()\r\n        var loggedInUser: User? = null\r\n\r\n        private fun getUser() {\r\n\r\n            FirebaseFirestore.getInstance()\r\n                .collection(\"users\")\r\n                .document(FirebaseAuth.getInstance().currentUser!!.phoneNumber!!)\r\n                .get()\r\n                .addOnSuccessListener { documentSnapshot ->\r\n                    if (documentSnapshot.exists()) {\r\n                        loggedInUser = documentSnapshot.toObject(\r\n                            User::class.java\r\n                        )\r\n                    }\r\n                }\r\n        }\r\n\r\n        @JvmStatic\r\n        fun addItemFromCart(restaurantItemPojo: RestaurantItemPojo) {\r\n            val toRemove: MutableList<RestaurantItemPojo> = ArrayList()\r\n            for (item in mRestaurantItemPojo) {\r\n                if (item.getmFoodName() == restaurantItemPojo.getmFoodName()) {\r\n                    toRemove.add(item)\r\n                }\r\n            }\r\n            mRestaurantItemPojo.removeAll(toRemove)\r\n            mRestaurantItemPojo.add(restaurantItemPojo)\r\n        }\r\n\r\n        @JvmStatic\r\n        fun addItem(restaurantItemPojo: RestaurantItemPojo) {\r\n            if (mRestaurantItemPojo.contains(restaurantItemPojo)) {\r\n                mRestaurantItemPojo.remove(restaurantItemPojo)\r\n            } else {\r\n                mRestaurantItemPojo.add(restaurantItemPojo)\r\n            }\r\n        }\r\n\r\n        fun removeItem(restaurantItemPojo: RestaurantItemPojo) {\r\n            mRestaurantItemPojo.remove(restaurantItemPojo)\r\n        }\r\n\r\n        @JvmStatic\r\n        fun getmRestaurantItemPojo(): List<RestaurantItemPojo> {\r\n            return mRestaurantItemPojo\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/duodevloopers/foodup/myapp/MyApp.kt b/app/src/main/java/com/duodevloopers/foodup/myapp/MyApp.kt
--- a/app/src/main/java/com/duodevloopers/foodup/myapp/MyApp.kt	(revision a8fecfb32170009d21c21a8eb599d37ab6acf3bf)
+++ b/app/src/main/java/com/duodevloopers/foodup/myapp/MyApp.kt	(date 1640546574178)
@@ -24,7 +24,7 @@
         private fun getUser() {
 
             FirebaseFirestore.getInstance()
-                .collection("users")
+                .collection("student")
                 .document(FirebaseAuth.getInstance().currentUser!!.phoneNumber!!)
                 .get()
                 .addOnSuccessListener { documentSnapshot ->
Index: app/src/main/java/com/duodevloopers/foodup/Fragments/SummaryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.duodevloopers.foodup.Fragments;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.text.SpannableString;\r\nimport android.text.Spanned;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.duodevloopers.foodup.Activities.OrderStatusActivity;\r\nimport com.duodevloopers.foodup.Adapter.SummaryItemListAdapter;\r\nimport com.duodevloopers.foodup.Model.FoodOrder;\r\nimport com.duodevloopers.foodup.Model.RestaurantItemPojo;\r\nimport com.duodevloopers.foodup.R;\r\nimport com.duodevloopers.foodup.databinding.FragmentSummaryBinding;\r\nimport com.duodevloopers.foodup.myapp.MyApp;\r\nimport com.duodevloopers.foodup.utility.Utility;\r\nimport com.google.android.material.snackbar.Snackbar;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\n\r\nimport java.util.List;\r\n\r\npublic class SummaryFragment extends Fragment implements View.OnClickListener {\r\n\r\n    private FragmentSummaryBinding binding;\r\n    private SummaryItemListAdapter adapter;\r\n    private String selectedPaymentMethod;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setHasOptionsMenu(true);\r\n        selectedPaymentMethod = \"Cash\";\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {\r\n        super.onCreateOptionsMenu(menu, inflater);\r\n        menu.clear();\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        binding = FragmentSummaryBinding.inflate(getLayoutInflater());\r\n        return binding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull @NotNull View view, @Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n\r\n        SummaryFragmentArgs args = SummaryFragmentArgs.fromBundle(getArguments());\r\n\r\n        String subTotal = args.getSubtotal();\r\n        binding.subTotalAmount.setText(subTotal + \" Tk\");\r\n        binding.discountAmount.setText(\"-30 Tk\");\r\n        if (Integer.valueOf(subTotal) >= 50) {\r\n            binding.totalAmount.setText(Integer.valueOf(subTotal) - 30 + \" Tk\");\r\n        }\r\n\r\n        String text = \"By proceeding you are agreeing to our Terms and Conditions\";\r\n        SpannableString string = new SpannableString(text);\r\n\r\n        ForegroundColorSpan primaryColor = new ForegroundColorSpan(Color.RED);\r\n\r\n        string.setSpan(primaryColor, 38, 58, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n        binding.text.setText(string);\r\n\r\n\r\n        adapter = new SummaryItemListAdapter(MyApp.getmRestaurantItemPojo());\r\n        binding.summaryItemRecyclerView.setAdapter(adapter);\r\n        binding.summaryItemRecyclerView.setHasFixedSize(true);\r\n\r\n        binding.cashPayment.setBackground(ContextCompat.getDrawable(requireContext(), R.drawable.button_border));\r\n        binding.digitalPayment.setOnClickListener(this);\r\n        binding.cashPayment.setOnClickListener(this);\r\n\r\n        binding.placeOrderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (selectedPaymentMethod.equals(\"Digital\")) {\r\n                    checkIfUserHasBalance();\r\n                } else {\r\n                    proceedToOrderStatus();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void placeFoodOrder(List<RestaurantItemPojo> list) {\r\n        FoodOrder order = new FoodOrder(\r\n                \"\",\r\n                \"\",\r\n                false,\r\n                \"\",\r\n                \"\",\r\n                false,\r\n                String.valueOf(System.currentTimeMillis())\r\n        );\r\n\r\n        int totalCost = 0;\r\n        StringBuilder stringBuilder = new StringBuilder();\r\n\r\n        for (int i = 0; i < list.size(); i++) {\r\n            RestaurantItemPojo s = list.get(i);\r\n            stringBuilder.append(s.getmFoodName());\r\n            if (i != list.size() - 1) stringBuilder.append(\"#\");\r\n            totalCost += s.getmFoodPrice();\r\n        }\r\n\r\n        order.setItem(stringBuilder.toString());\r\n        order.setCost(String.valueOf(totalCost));\r\n\r\n        Utility.Companion.placeFoodOrder(order);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        binding.digitalPayment.setBackground(null);\r\n        binding.cashPayment.setBackground(null);\r\n\r\n        if (v.getId() == R.id.digital_payment) {\r\n            selectedPaymentMethod = \"Digital\";\r\n            binding.digitalPayment.setBackground(ContextCompat.getDrawable(requireContext(), R.drawable.button_border));\r\n        } else if (v.getId() == R.id.cash_payment) {\r\n            selectedPaymentMethod = \"Cash\";\r\n            binding.cashPayment.setBackground(ContextCompat.getDrawable(requireContext(), R.drawable.button_border));\r\n        }\r\n    }\r\n\r\n    private void checkIfUserHasBalance() {\r\n        SummaryFragmentArgs args = SummaryFragmentArgs.fromBundle(getArguments());\r\n        double subTotal = Double.parseDouble(args.getSubtotal()) - 30.00;\r\n        if (subTotal > Double.parseDouble(MyApp.getLoggedInUser().getCredit())) {\r\n            showSnackBar();\r\n        } else {\r\n            proceedToOrderStatus();\r\n        }\r\n    }\r\n\r\n    private void proceedToOrderStatus() {\r\n//        final NavController navController = Navigation.findNavController(requireActivity(), R.id.nav_host_fragment);\r\n//        NavDirections action = SummaryFragmentDirections.actionSummaryFragmentToOrderStatusFragment();\r\n//        navController.navigate(action);\r\n        startActivity(new Intent(requireActivity(), OrderStatusActivity.class));\r\n        placeFoodOrder(MyApp.getmRestaurantItemPojo());\r\n    }\r\n\r\n    private void showSnackBar() {\r\n        Snackbar.make(binding.getRoot(), \"You have insufficient balance\", Snackbar.LENGTH_LONG)\r\n                .setBackgroundTint(Color.RED)\r\n                .setActionTextColor(Color.WHITE)\r\n                .show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/duodevloopers/foodup/Fragments/SummaryFragment.java b/app/src/main/java/com/duodevloopers/foodup/Fragments/SummaryFragment.java
--- a/app/src/main/java/com/duodevloopers/foodup/Fragments/SummaryFragment.java	(revision a8fecfb32170009d21c21a8eb599d37ab6acf3bf)
+++ b/app/src/main/java/com/duodevloopers/foodup/Fragments/SummaryFragment.java	(date 1640546296857)
@@ -148,7 +148,7 @@
     private void checkIfUserHasBalance() {
         SummaryFragmentArgs args = SummaryFragmentArgs.fromBundle(getArguments());
         double subTotal = Double.parseDouble(args.getSubtotal()) - 30.00;
-        if (subTotal > Double.parseDouble(MyApp.getLoggedInUser().getCredit())) {
+        if (subTotal > Double.parseDouble(MyApp.Companion.getLoggedInUser().getCredit())) {
             showSnackBar();
         } else {
             proceedToOrderStatus();
